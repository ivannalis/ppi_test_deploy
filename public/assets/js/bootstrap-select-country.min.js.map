{
    "version": 3,
    "file": "bootstrap-select-country.min.js",
    "sources": [
        "../../node_modules/i18n-iso-countries/index.js", "./assets/src/bootstrap-select-country.js"
    ],
    "sourcesContent": [
        "\"use strict\";\n\nvar codes = require(\"./codes.json\");\nvar registeredLocal" +
                "es = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nvar alpha2 = {}," +
                "\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(fu" +
                "nction(codeInformation) {\n  var s = codeInformation;\n  alpha2[s[0]] = s[1];" +
                "\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s" +
                "[2];\n});\n\nfunction formatNumericCode(code) {\n  return String('000'+(code ?" +
                " code : '')).slice(-3);\n}\n\nfunction registerLocale(localeData) {\n  if (!lo" +
                "caleData.locale) {\n    throw new TypeError('Missing localeData.locale');\n  }" +
                "\n\n  if (!localeData.countries) {\n    throw new TypeError('Missing localeDat" +
                "a.countries');\n  }\n\n  registeredLocales[localeData.locale] = localeData.cou" +
                "ntries;\n}\n\nexports.registerLocale = registerLocale;\n\n/*\n * @param code A" +
                "lpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha" +
                "2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;" +
                "\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */" +
                "\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2To" +
                "Alpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeri" +
                "c code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedN" +
                "umeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n" +
                "\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\n" +
                "function alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports." +
                "alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @ret" +
                "urn Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  var pa" +
                "dded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}" +
                "\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric cod" +
                "e\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {" +
                "\n  var padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexpor" +
                "ts.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2" +
                ", alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlph" +
                "a3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)" +
                ") {\n      return numericToAlpha3(code);\n    }\n    if(code.length === 2) {\n" +
                "      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length =" +
                "== 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === " +
                "\"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}" +
                "\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha" +
                "-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code" +
                ") {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n  " +
                "    return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      " +
                "return code.toUpperCase();\n    }\n    if(code.length === 3) {\n      return a" +
                "lpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number" +
                "\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports" +
                ".toAlpha2 = toAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or num" +
                "eric code\n * @param lang language for country name\n * @return name or undefi" +
                "ned\n */\nexports.getName = function(code, lang) {\n  try {\n    var d = regis" +
                "teredLocales[lang.toLowerCase()];\n    return d[toAlpha2(code)];\n  } catch (e" +
                "rr) {\n    return undefined;\n  }\n};\n\n/*\n * @param lang language for count" +
                "ry names\n * @return Object of country code mapped to county name\n */\nexport" +
                "s.getNames = function(lang) {\n  var d = registeredLocales[lang.toLowerCase()]" +
                ";\n  if (d === undefined) {\n    return {};\n  }\n  return d;\n};\n\n/*\n * @p" +
                "aram name name\n * @param lang language for country name\n * @return ISO 3166-" +
                "1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function(name, lang) {\n " +
                " try {\n    var p, codenames = registeredLocales[lang.toLowerCase()];\n    for" +
                " (p in codenames) {\n      if (codenames.hasOwnProperty(p)) {\n        if (cod" +
                "enames[p].toLowerCase() === name.toLowerCase()) {\n          return p;\n      " +
                "  }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return unde" +
                "fined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 co" +
                "des\n */\nexports.getAlpha2Codes = function() {\n  return alpha2;\n};\n\n/*\n " +
                "* @param name name\n * @param lang language for country name\n * @return ISO 3" +
                "166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function(name, lang) " +
                "{\n  var alpha2 = this.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return" +
                " this.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * " +
                "@return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha" +
                "3Codes = function() {\n  return alpha3;\n};\n\n/*\n * @return Object of numeri" +
                "c codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function() {\n" +
                "  return numeric;\n};\n\n/*\n * @return Array of supported languages\n */\nexp" +
                "orts.langs = function() {\n  return Object.keys(registeredLocales);\n};\n\n/*" +
                "\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boole" +
                "an\n */\nexports.isValid = function(code) {\n  return alpha3.hasOwnProperty(co" +
                "de) || alpha2.hasOwnProperty(code) ||\n    numeric.hasOwnProperty(code);\n};\n",
        "import $ from 'jquery';\n\nimport countries from \"i18n-iso-countries\";\nimpo" +
                "rt langs_en from \"i18n-iso-countries/langs/en.json\";\ncountries.registerLoca" +
                "le(langs_en);\nconst langCountries = countries.getNames('en');\n\nconst allCou" +
                "ntries = Object.keys(langCountries).map((code) => {\n\treturn {\n\t\tname: lan" +
                "gCountries[code],\n\t\tcode: code\n\t};\n});\n\nlet countrypicker = function(o" +
                "pts) {\n\t$(this).each(function(index, select) {\n\t\tvar $select = $(select);" +
                "\n\n\t\tvar flag = $select.data('flag');\n\n\t\tvar countries = allCountries;" +
                "\n\t\t\n\t\t// filter countries of an option \"data-countries\" exist\"\n\t\tv" +
                "ar selectedCountries = $select.data('countries');\n\t\tif (selectedCountries &" +
                "& selectedCountries.length) {\n\t\t\tselectedCountries = selectedCountries.toU" +
                "pperCase().split(',');\n\t\t\tcountries = countries.filter(c => selectedCountr" +
                "ies.includes(c.code));\n\t\t}\n\n\t\tvar options = [];\n\t\tif (flag) {\n\t\t" +
                "\t\t/* create option for each existing country */\n\t\t\t\t$.each(countries, f" +
                "unction (index, country) {\n\t\t\t\t\toptions.push(`<option\n\t\t\t\t\t\tdata-" +
                "tokens=\"${country.code} ${country.name}\"\n\t\t\t\t\t\tdata-icon=\"inline-fla" +
                "g flag ${country.code.toLowerCase()}\"\n\t\t\t\t\t\tclass=\"option-with-flag\"" +
                "\n\t\t\t\t\t\tvalue=\"${country.code}\">${country.name}</option>`);\n\t\t\t\t}" +
                ");\n\n\t\t} else {\n\t\t\t//for each build list without flag\n\t\t\t$.each(cou" +
                "ntries, function (index, country) {\n\t\t\t\toptions.push(`<option\n\t\t\t\t\t" +
                "data-countrycode=\"${country.code}\n\t\t\t\t\tdata-tokens=\"${country.code} ${" +
                "country.name}\"\n\t\t\t\t\tvalue=\"${country.code}\">${country.name}</option>`" +
                ");\n\t\t\t});\n\t\t}\n\n\t\t$select\n\t\t\t.addClass('f16')\n\t\t\t.html(optio" +
                "ns.join('\\n'));\n\n\t\t//check if default\n\t\tvar defaultCountryName = $sele" +
                "ct.data('default');\n\t\t//if there's a default, set it\n\t\tif (defaultCountr" +
                "yName) {\n\t\t\t$select.val(defaultCountryName.split(',').map((v) => v.trim())" +
                ");\n\t\t}\n\t});\n};\n\n/* extend jQuery with the countrypicker function */\n$" +
                ".fn.countrypicker = countrypicker;\n\n/* initialize all countrypicker by defau" +
                "lt. This is the default jQuery Behavior. */\n$('.countrypicker').countrypicker" +
                "();\n\n/* return the countrypicker function for use as a module. */\nexport de" +
                "fault countrypicker;\n"
    ],
    "names": [
        "alpha2",
        "alpha3",
        "numeric",
        "invertedNumeric",
        "formatNumericCode",
        "code",
        "String",
        "slice",
        "alpha3ToAlpha2",
        "alpha2ToAlpha3",
        "numericToAlpha3",
        "padded",
        "numericToAlpha2",
        "toAlpha2",
        "test",
        "length",
        "toUpperCase",
        "forEach",
        "codeInformation",
        "s",
        "exports",
        "localeData",
        "locale",
        "TypeError",
        "countries",
        "lang",
        "registeredLocales",
        "toLowerCase",
        "err",
        "d",
        "undefined",
        "name",
        "p",
        "codenames",
        "hasOwnProperty",
        "this",
        "getAlpha2Code",
        "toAlpha3",
        "Object",
        "keys",
        "registerLocale",
        "langs_en",
        "langCountries",
        "getNames",
        "allCountries",
        "map",
        "countrypicker",
        "opts",
        "each",
        "index",
        "select",
        "$select",
        "$",
        "flag",
        "data",
        "selectedCountries",
        "split",
        "filter",
        "includes",
        "c",
        "options",
        "country",
        "push",
        "addClass",
        "html",
        "join",
        "defaultCountryName",
        "val",
        "v",
        "trim",
        "fn"
    ],
    "mappings": "6qRAQIA,KACFC,KACAC,KACAC,KAUF,SAASC,EAAkBC,UAClBC,OAAO,OAAOD,GAAc,KAAKE,OAAO," +
            "GAqBjD,SAASC,EAAeH,UACfJ,EAAOI,GAQhB,SAASI,EAAeJ,UACfL,EAAOK,GA0BhB,SAASK,EAAg" +
            "BL,OACnBM,EAASP,EAAkBC,UACxBI,EAAeP,EAAQS,IAQhC,SAASC,EAAgBP,OACnBM,EAASP,EAAk" +
            "BC,UACxBH,EAAQS,GA+BjB,SAASE,EAASR,MACI,iBAATA,EAAmB,IACxB,WAAWS,KAAKT,UACXO,E" +
            "AAgBP,MAEL,IAAhBA,EAAKU,cACAV,EAAKW,iBAEK,IAAhBX,EAAKU,cACCP,EAAeH,EAAKW,kBAGX" +
            ",iBAATX,SACFO,EAAgBP,aA1HrBY,QAAQ,SAASC,OACjBC,EAAID,IACDC,EAAE,IAAMA,EAAE,KAC" +
            "VA,EAAE,IAAMA,EAAE,KACTA,EAAE,IAAMA,EAAE,KACFA,EAAE,IAAMA,EAAE,KAyH5BC,sBAlHA," +
            "SAAwBC,OACjBA,EAAWC,aACR,IAAIC,UAAU,iCAGjBF,EAAWG,gBACR,IAAID,UAAU,kCAGJF,EAAW" +
            "C,QAAUD,EAAWG,0BAY3BhB,iBASAC,kBAMzB,SAAyBJ,UAChBF,EAAgBK,EAAeH,qBAQxC,SAAyBA," +
            "UAChBF,EAAgBE,oBAYCK,kBAUAE,WAM1B,SAAkBP,MACI,iBAATA,EAAmB,IACxB,WAAWS,KAAKT,U" +
            "ACXK,EAAgBL,MAEN,IAAhBA,EAAKU,cACCN,EAAeJ,EAAKW,kBAET,IAAhBX,EAAKU,cACAV,EAAKW" +
            ",iBAGI,iBAATX,SACFK,EAAgBL,aA2BRQ,UAOD,SAASR,EAAMoB,cAErBC,EAAkBD,EAAKE,eACtBd" +
            ",EAASR,IAClB,MAAOuB,qBASQ,SAASH,OACtBI,EAAIH,EAAkBD,EAAKE,2BACrBG,IAAND,KAGGA," +
            "iBAQe,SAASE,EAAMN,WAE/BO,EAAGC,EAAYP,EAAkBD,EAAKE,mBACrCK,KAAKC,KACJA,EAAUC,eA" +
            "AeF,IACvBC,EAAUD,GAAGL,gBAAkBI,EAAKJ,qBAC/BK,SAKb,MAAOJ,2BAQc,kBAChB5B,iBAQe,S" +
            "AAS+B,EAAMN,OACjCzB,EAASmC,KAAKC,cAAcL,EAAMN,UAClCzB,EACKmC,KAAKE,SAASrC,0BASA" +
            ",kBAChBC,mBAMiB,kBACjBC,SAMO,kBACPoC,OAAOC,KAAKb,YAOH,SAASrB,UAClBJ,EAAOiC,eAA" +
            "e7B,IAASL,EAAOkC,eAAe7B,IAC1DH,EAAQgC,eAAe7B,mrICxOjBmC,eAAeC,GACzB,IAAMC,EAAg" +
            "BlB,EAAUmB,SAAS,MAEnCC,EAAeN,OAAOC,KAAKG,GAAeG,IAAI,SAACxC,eAE7CqC,EAAcrC,QACd" +
            "A,KAIJyC,EAAgB,SAASC,KAC1BZ,MAAMa,KAAK,SAASC,EAAOC,OACxBC,EAAUC,EAAEF,GAEZG,EA" +
            "AOF,EAAQG,KAAK,QAEpB9B,EAAYoB,EAGZW,EAAoBJ,EAAQG,KAAK,aACjCC,GAAqBA,EAAkBxC,WA" +
            "CtBwC,EAAkBvC,cAAcwC,MAAM,OAC9ChC,EAAUiC,OAAO,mBAAKF,EAAkBG,SAASC,EAAEtD,aAG5D" +
            "uD,KACAP,IAEAL,KAAKxB,EAAW,SAAUyB,EAAOY,KAC1BC,0CACQD,EAAQxD,SAAQwD,EAAQ9B,mDA" +
            "CT8B,EAAQxD,KAAKsB,6EAElCkC,EAAQxD,UAASwD,EAAQ9B,sBAKnCiB,KAAKxB,EAAW,SAAUyB,E" +
            "AAOY,KAC1BC,6CACaD,EAAQxD,iCACbwD,EAAQxD,SAAQwD,EAAQ9B,4BAC9B8B,EAAQxD,UAASwD," +
            "EAAQ9B,sBAKnCgC,SAAS,OACTC,KAAKJ,EAAQK,KAAK,WAGhBC,EAAqBf,EAAQG,KAAK,WAElCY,KA" +
            "CKC,IAAID,EAAmBV,MAAM,KAAKX,IAAI,SAACuB,UAAMA,EAAEC,oBAM1DjB,EAAEkB,GAAGxB,cAA" +
            "gBA,EAGrBM,EAAE,kBAAkBN"
}